---
import Badge from "@/components/Badge.astro";
import Widget from "@/components/widgets/Widget.astro";
import { toCssHeight } from "@/lib/utils";
import { getCldImageUrl } from "astro-cloudinary/helpers";

interface Props {
	title: string;
	image: string;
	description?: string;
	types?: string[];
	id?: string;
	alt?: string;
	height?: string | number;
	position?: "top" | "bottom";
	[key: string]: any;
}

const { title, image, description, types, id, alt, height, position, ...rest } =
	Astro.props;

const imageUrl = getCldImageUrl({ src: image, width: 1200, format: "auto" });
const href = id ? `/work/${encodeURIComponent(id)}/` : undefined;

const mediaHeightCss = toCssHeight(height);
const mediaWrapperStyle = `--media-h:${mediaHeightCss};`;
const containerJustifyClass =
	position === "bottom"
		? "md:justify-end"
		: position === "top"
			? "md:justify-start"
			: "";
---

<Widget
	class:list={[
		"flex max-w-[528px] flex-col gap-3 md:max-w-none",
		containerJustifyClass,
		"mb-12 md:mb-0",
	]}
	{...rest}
>
	{/** Desktop media (unchanged) */}
	<div class="hidden md:block" style={mediaWrapperStyle}>
		<div class:list={["md:h-[var(--media-h)] md:min-h-[300px]"]}>
			{
				href ? (
					<a
						href={href}
						class="block md:h-full md:w-full"
						aria-label={`View ${title}`}
						data-cursor-hover
						data-cursor-title={title}
					>
						<img
							src={imageUrl}
							alt={alt || title}
							loading="lazy"
							decoding="async"
							class="h-auto w-full md:h-full md:w-auto md:max-w-full"
						/>
					</a>
				) : (
					<div
						class="block md:h-full md:w-full"
						data-cursor-hover
						data-cursor-title={title}
					>
						<img
							src={imageUrl}
							alt={alt || title}
							loading="lazy"
							decoding="async"
							class="h-auto w-full md:h-full md:w-auto md:max-w-full"
						/>
					</div>
				)
			}
		</div>
	</div>

	{/** Mobile redesigned layout */}
	<div class="grid grid-cols-5 items-start gap-2.5 md:hidden">
		<div class="col-span-2 flex flex-col gap-2">
			<h2 class="text-base-900 text-sm leading-tight font-medium">{title}</h2>
			{
				description && (
					<p class="text-base-600 text-xs leading-[1.35] line-clamp-5">
						{description}
					</p>
				)
			}
			{
				href && (
					<a
						href={href}
						class="text-base-300 hover:text-base-600 text-[10px] leading-[1.1] font-semibold uppercase transition-colors"
						aria-label={`View ${title}`}
					>
						See more
					</a>
				)
			}
			{
				types && types.length > 0 && (
					<div class="flex flex-wrap gap-1.5 pt-1">
						{types.map((t) => (
							<Badge
								text={`${t.slice(0, 1).toUpperCase()}${t.slice(1)}`}
								variant="dark"
							/>
						))}
					</div>
				)
			}
		</div>
		<div class="col-span-3">
			<div class="overflow-hidden rounded-xl border border-base-100 bg-white" style={mediaWrapperStyle}>
				{
					href ? (
						<a
							href={href}
							class="block"
							aria-label={`View ${title}`}
							data-cursor-hover
							data-cursor-title={title}
						>
							<img
								src={imageUrl}
								alt={alt || title}
								loading="lazy"
								decoding="async"
								class="h-auto w-full"
							/>
						</a>
					) : (
						<div class="block" data-cursor-hover data-cursor-title={title}>
							<img
								src={imageUrl}
								alt={alt || title}
								loading="lazy"
								decoding="async"
								class="h-auto w-full"
							/>
						</div>
					)
				}
			</div>
		</div>
	</div>
</Widget>
