---
import Badge from "@/components/Badge.astro";
import Widget from "@/components/widgets/Widget.astro";
import { toCssHeight } from "@/lib/utils";
import { getCldVideoUrl } from "astro-cloudinary/helpers";

interface Props {
	title: string;
	video: string;
	description?: string;
	poster?: string;
	types?: string[];
	id?: string;
	height?: string | number;
	position?: "top" | "bottom";
	[key: string]: any;
}

const {
	title,
	video,
	description,
	poster,
	types,
	id,
	height,
	position,
	...rest
} = Astro.props;

const videoUrl = getCldVideoUrl({ src: video });

const mediaHeightCss = toCssHeight(height);
const mediaWrapperStyle = `--media-h:${mediaHeightCss};`;
const containerJustifyClass =
	position === "bottom"
		? "md:justify-end"
		: position === "top"
			? "md:justify-start"
			: "";
---

<Widget
	class:list={[
		"flex max-w-[528px] flex-col gap-3 md:max-w-none",
		containerJustifyClass,
		"mb-12 md:mb-0",
	]}
	{...rest}
>
	{/** Desktop media (unchanged) */}
	<div class="hidden md:block" style={mediaWrapperStyle}>
		<div class:list={["w-full md:h-[var(--media-h)] md:min-h-[300px]"]}>
			<a
				href={id ? `/work/${encodeURIComponent(id)}/` : undefined}
				class="block md:h-full md:w-full"
				aria-label={`View ${title}`}
				data-cursor-hover
				data-cursor-title={title}
			>
				<video
					src={videoUrl}
					poster={poster}
					loop
					muted
					autoplay
					playsinline
					class="h-auto w-full md:h-full md:w-auto md:max-w-full"></video>
			</a>
		</div>
	</div>

	{/** Mobile redesigned layout */}
	<div class="grid grid-cols-5 items-start gap-2.5 md:hidden">
		<div class="col-span-2 flex flex-col gap-2">
			<h2 class="text-base-900 text-sm leading-tight font-medium">{title}</h2>
			{
				description && (
					<p class="text-base-600 text-xs leading-[1.35] line-clamp-5">{description}</p>
				)
			}
			{
				id && (
					<a
						href={`/work/${encodeURIComponent(id)}/`}
						class="text-base-300 hover:text-base-600 text-[10px] leading-[1.1] font-semibold uppercase transition-colors"
						aria-label={`View ${title}`}
					>
						See more
					</a>
				)
			}
			{
				types && types.length > 0 && (
					<div class="flex flex-wrap gap-1.5 pt-1">
						{types.map((t) => (
							<Badge
								text={`${t.slice(0, 1).toUpperCase()}${t.slice(1)}`}
								variant="dark"
							/>
						))}
					</div>
				)
			}
		</div>
		<div class="col-span-3">
			<div class="overflow-hidden rounded-xl border border-base-100 bg-white" style={mediaWrapperStyle}>
				<video
					src={videoUrl}
					poster={poster}
					loop
					muted
					autoplay
					playsinline
					class="h-auto w-full"></video>
			</div>
		</div>
	</div>
</Widget>
