---
import WorkLayout from "@/layouts/WorkLayout.astro";
import type { AstroInstance } from "astro";
import { getCollection, render } from "astro:content";

export const getStaticPaths = async () => {
	const entries = await getCollection("works");
	return entries.map((entry) => ({
		params: { slug: entry.id },
		props: { entry },
	}));
};

const { entry } = Astro.props;
const { Content } = await render(entry);

const interactiveModules = import.meta.glob<AstroInstance>(
	"../../works/*/*.astro",
	{ eager: true },
);
const key = `../../works/${entry.id}/${entry.id}.astro`;
let ComponentToRender: AstroInstance["default"] | null = null;
if (key in interactiveModules) {
	ComponentToRender = interactiveModules[key].default;
}
---

<WorkLayout
	title={entry.data.title}
	description={entry.data.description}
	createdDate={entry.data.createdDate.toISOString()}
	lastUpdatedDate={entry.data.lastUpdatedDate.toISOString()}
	types={entry.data.types || []}
	disableSidebarClickOutside={entry.data.disableSidebarClickOutside}
>
	{ComponentToRender && <ComponentToRender slot="interactive" />}
	<Content />
</WorkLayout>
