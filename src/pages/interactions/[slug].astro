---
import InteractionLayout from "@/layouts/InteractionLayout.astro";
import type { AstroInstance } from "astro";
import { getCollection, render } from "astro:content";

export const getStaticPaths = async () => {
	const entries = await getCollection("interactions");
	return entries.map((entry) => {
		return { params: { slug: entry.id }, props: { entry } };
	});
};

const { entry } = Astro.props;
const { Content } = await render(entry);

const interactiveModules = import.meta.glob<AstroInstance>(
	"../../interactions/*/interactive.astro",
	{ eager: true },
);
const key = `../../interactions/${entry.id}/interactive.astro`;
let ComponentToRender: AstroInstance["default"] | null = null;
if (key in interactiveModules) {
	ComponentToRender = interactiveModules[key].default;
}
---

<InteractionLayout
	title={entry.data.title}
	description={entry.data.description}
	createdDate={entry.data.createdDate.toISOString()}
	lastUpdatedDate={entry.data.lastUpdatedDate.toISOString()}
	technologies={entry.data.tags || []}
	disableSidebarClickOutside={entry.data.disableSidebarClickOutside}
>
	{ComponentToRender && <ComponentToRender slot="interactive" />}
	<Content />
</InteractionLayout>
