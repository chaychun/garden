---
import InteractionLayout from "@/layouts/InteractionLayout.astro";
import { getCollection, render, type CollectionEntry } from "astro:content";

export const getStaticPaths = async () => {
	const interactions = await getCollection("interactions");
	return interactions.map((interaction) => ({
		params: { id: interaction.id },
		props: { interaction },
	}));
};

const { interaction } = Astro.props as {
	interaction: CollectionEntry<"interactions">;
};
const { Content } = await render(interaction);

const interactiveModules = import.meta.glob<{ default: unknown }>(
	"../../interactions/*/index.astro",
	{ eager: true },
);
const componentPath = `../../interactions/${interaction.id}/index.astro`;
let ComponentToRender: any = null;
if (componentPath in interactiveModules) {
	ComponentToRender = (interactiveModules[componentPath] as any).default;
}
---

<InteractionLayout
	title={interaction.data.title}
	description={interaction.data.description}
	createdDate={interaction.data.createdDate.toISOString()}
	lastUpdatedDate={interaction.data.lastUpdatedDate.toISOString()}
	technologies={interaction.data.tags || []}
>
	{ComponentToRender && <ComponentToRender slot="interactive" />}
	<Content />
</InteractionLayout>
