---
import BaseLayout from "./BaseLayout.astro";
import TopBar from "../components/nav/TopBar";

interface Props {
	title: string;
	scrollAreaId?: string;
	filterCounts: Record<string, number>;
}

const { title, scrollAreaId = "main-scroll", filterCounts } = Astro.props;
---

<BaseLayout title={title}>
	<div class="bg-base-50 min-h-screen">
		<div class="fixed top-0 right-0 left-0 z-40">
			<TopBar title="Chayut" filterCounts={filterCounts} client:load />
		</div>

		<div class="h-dvh w-full pt-[112px]">
			<div
				class="md:flex md:h-full md:overflow-x-auto md:overflow-y-hidden"
				id="scroll-container"
				data-scroll-area-id={scrollAreaId}
			>
				<div
					class="mx-auto flex max-w-[528px] flex-col md:max-w-none md:flex-row"
				>
					<slot />
				</div>
			</div>
		</div>

		<script>
			import {
				setupHorizontalScrollSmoothing,
				setupVerticalScrollSmoothing,
			} from "../lib/scroll-smoothing";

			let currentCleanup: (() => void) | null = null;
			let mediaQuery: MediaQueryList | null = null;

			const setup = () => {
				if (currentCleanup) {
					currentCleanup();
					currentCleanup = null;
				}
				const isDesktop = mediaQuery
					? mediaQuery.matches
					: window.matchMedia("(min-width: 768px)").matches;
				currentCleanup = isDesktop
					? setupHorizontalScrollSmoothing("#scroll-container")
					: setupVerticalScrollSmoothing();
			};

			const attachMedia = () => {
				if (mediaQuery) return;
				mediaQuery = window.matchMedia("(min-width: 768px)");
				mediaQuery.addEventListener("change", setup);
			};

			document.addEventListener("astro:page-load", () => {
				attachMedia();
				setup();
			});

			document.addEventListener("astro:before-swap", () => {
				if (currentCleanup) {
					currentCleanup();
					currentCleanup = null;
				}
				if (mediaQuery) {
					mediaQuery.removeEventListener("change", setup);
					mediaQuery = null;
				}
			});
		</script>
	</div>
</BaseLayout>
