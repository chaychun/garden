---
import Widget from "@/components/widgets/Widget.astro";
import Badge from "@/components/Badge.astro";
import { getCldImageUrl } from "astro-cloudinary/helpers";

interface Props {
	title: string;
	image: string;
	description?: string;
	types?: string[];
	id?: string;
	alt?: string;
	[key: string]: any;
}

const { title, image, description, types, id, alt, ...rest } = Astro.props;

const imageUrl = getCldImageUrl({ src: image, width: 1200, format: "auto" });
const href = id ? `/work/${encodeURIComponent(id)}/` : undefined;
---

<Widget
	class:list={[
		"flex max-w-[528px] flex-col gap-3 p-6 md:justify-between",
		"mb-12 md:mb-0",
	]}
	{...rest}
>
	<div class="w-full md:h-1/2 md:min-h-[300px]">
		{href ? (
			<a
				href={href}
				class="block"
				aria-label={`View ${title}`}
				data-cursor-hover
				data-cursor-title={title}
				data-cursor-types={(types ?? []).join(",")}
			>
				<img
					src={imageUrl}
					alt={alt || title}
					loading="lazy"
					decoding="async"
					class="w-full h-auto md:h-full md:w-auto max-w-none"
				/>
			</a>
		) : (
			<div
				class="block"
				data-cursor-hover
				data-cursor-title={title}
				data-cursor-types={(types ?? []).join(",")}
			>
				<img
					src={imageUrl}
					alt={alt || title}
					loading="lazy"
					decoding="async"
					class="w-full h-auto md:h-full md:w-auto max-w-none"
				/>
			</div>
		)}
	</div>

	<div class="flex flex-col gap-2 md:hidden">
		<div class="flex items-center justify-between gap-2">
			<h2 class="font-switzer text-base-900 min-w-0 truncate text-lg leading-tight font-medium">
				{title}
			</h2>
			{types && types.length > 0 && (
				<div class="flex flex-none gap-2">
					{types.map((t) => (
						<Badge text={`${t.slice(0, 1).toUpperCase()}${t.slice(1)}`} variant="dark" />
					))}
				</div>
			)}
		</div>
		{description && (
			<p class="font-switzer text-base-600 leading-none">{description}</p>
		)}
	</div>
</Widget>